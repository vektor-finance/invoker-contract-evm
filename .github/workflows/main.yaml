name: main

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

env:
  ETHERSCAN_TOKEN: ${{ secrets.ETHERSCAN_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  WEB3_INFURA_PROJECT_ID: ${{ secrets.WEB3_INFURA_PROJECT_ID }}

  # increasing available memory for node reduces issues with ganache crashing
  # https://nodejs.org/api/cli.html#cli_max_old_space_size_size_in_megabytes
  NODE_OPTIONS: --max_old_space_size=4096

  CACHED_COMPILER_PATHS: |
    ~/.solcx
    ~/.vvm

  CACHED_PYTHON_DEPENDENCY_PATHS: |
    ~/.cache/pip

  CACHED_NODE_DEPENDENCY_PATHS: |
    ${{ github.workspace }}/node_modules

jobs:

  lint_and_tests:
    name: Install dependencies, run lint and tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout current commit (${{ github.sha }})
        uses: actions/checkout@v2

      - name: Cache Compiler Installations
        uses: actions/cache@v2
        id: cache_compiler_installations
        with:
          path: ${{ env.CACHED_COMPILER_PATHS }}
          key: ${{ runner.os }}-compiler-cache

      - name: Setup Node.js
        uses: actions/setup-node@v2
        id: setup_node

      - name: Cache Node dependencies
        uses: actions/cache@v2
        id: cache_node_dependencies
        with:
          path: ${{ env.CACHED_NODE_DEPENDENCY_PATHS }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Node dependencies
        run: yarn install
        id: install_node_dependencies

      - name: Run lint checks
        run: yarn run lint
        id: run_yarn_lint

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        id: setup_python
        with:
          python-version: 3.8

      - name: Cache Python dependencies
        uses: actions/cache@v2
        id: cache_python_dependencies
        with:
          path: ${{ env.CACHED_PYTHON_DEPENDENCY_PATHS }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install Python dependencies
        run: pip install -r requirements.txt
        id: install_python_dependencies

      - name: Install pre-commit hooks
        run: pre-commit install
        id: install_pre_commit

      - name: Run pre-commit checks
        run: pre-commit run --all-files
        id: run_pre_commit

      - name: Create .env file (unused)
        run: touch .env
        id: create_env_file

      - name: Run Tests
        run: brownie test
        id: run_brownie_tests

