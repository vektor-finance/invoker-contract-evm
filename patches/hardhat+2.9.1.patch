diff --git a/node_modules/hardhat/internal/hardhat-network/jsonrpc/client.js b/node_modules/hardhat/internal/hardhat-network/jsonrpc/client.js
index ab51b5a..a777e12 100644
--- a/node_modules/hardhat/internal/hardhat-network/jsonrpc/client.js
+++ b/node_modules/hardhat/internal/hardhat-network/jsonrpc/client.js
@@ -141,6 +141,18 @@ class JsonRpcClient {
             reward: (0, io_ts_1.optional)(t.array(t.array(base_types_1.rpcQuantity))),
         }), (res) => res.oldestBlock.addn(res.baseFeePerGas.length));
     }
+    // addAccessList isn't included with the block
+    addAccessList(method, rawResult) {
+        if (
+        method.startsWith('eth_getBlock') &&
+        rawResult &&
+        rawResult.transactions?.length
+        ) {
+        rawResult.transactions.forEach((t) => {
+            if (t.accessList == null) t.accessList = [];
+        });
+        }
+    }
     async _perform(method, params, tType, getMaxAffectedBlockNumber) {
         const cacheKey = this._getCacheKey(method, params);
         const cachedResult = this._getFromCache(cacheKey);
@@ -155,6 +167,7 @@ class JsonRpcClient {
             }
         }
         const rawResult = await this._send(method, params);
+        this.addAccessList(method,rawResult)
         const decodedResult = (0, decodeJsonRpcResponse_1.decodeJsonRpcResponse)(rawResult, tType);
         const blockNumber = getMaxAffectedBlockNumber(decodedResult);
         if (this._canBeCached(blockNumber)) {
